{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastPressedKey","handleKeyup","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAe,CACbC,eAAgB,IAFpB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,eAAgBE,EAAME,OAd1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAmBO,KAAKR,MAAxBC,eAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,kCAE8BA,GAD3B,kCAxBd,GAAyBU,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.4b37c397.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  lastPressedKey: string;\n}\nexport class App extends React.Component {\n  state: State = {\n    lastPressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ lastPressedKey: event.key });\n  };\n\n  render() {\n    const { lastPressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!lastPressedKey\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is ${lastPressedKey}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}